prop.test(x = 157, n = 540, p = 0.33, correct = FALSE)
((157/540) - .33)/sqrt(.33 * .67 / 540)
0.0262*2
(.2907 - .33)/sqrt(.33 * .67 / 540)
(.29 - .33)/sqrt(.33 * .67 / 540)
H_0&: p = 0.33 \\#
H_A&: p \ne 0.33
61*24/121
61*97/121
61*60/121
9*24/121
60*24/121
60*97/121
12.10+48.90
11.90+48.09
((9-12.10)^2) / 12.10 + ((15-11.90)^2) / 11.90 + ((52-48.90)^2) / 48.90  + ((45-48.10)^2) / 48.10
q()
((.085)/8) / ((1 - 0.085) / (1914-8-1))
((.085)/10) / ((1 - 0.085) / (1914-10-1))
((.085)/9) / ((1 - 0.085) / (1914-9-1))
q()
seq(-5,5,100)
seq(-5,5,length=100)
??predict.glm
27/80
(.3375-.3)/sqrt(.3*.7/80)
q()
(10/34)-(4/16)
30/150
40 / 150
(.25-.20)/sqrt(.20*.80/100)
1-.8944
50*.2
(.25-.20)/sqrt(.20*.80/105)
(.25-.20)/sqrt(.20*.80/150)
(.25-.20)/sqrt(.20*.80/200)
(.25-.20)/sqrt(.20*.80/250)
(.25-.20)/sqrt(.20*.80/300)
1-.4271
1-.4371
q()
ls()
# Coda: for MCMC output#
# RColorBrewer: for gradient maps#
# WinBugs#
# rgeos: for manipulating shape files#
# maptools: for plotting shape files#
# RgoogleMaps: for plotting on a google map#
# rgdal: required for RgoogleMaps#
# grid: for Grob functions#
#
##############################################################################
# Install#
##############################################################################
#
# #
#
install.packages("coda")#
install.packages("RColorBrewer")#
install.packages("R2WinBUGS")#
install.packages("rgeos")#
install.packages("maptools")#
install.packages("RgoogleMaps")#
install.packages("rgdal", type = source)	# from source, not binary#
install.packages("grid")	# from source, not binary#
#
# Load#
#
library(coda)#
library(RColorBrewer)#
library(R2WinBUGS)#
library(rgeos)#
library(maptools)#
library(RgoogleMaps)#
library(rgdal)#
library(grid)#
#
##############################################################################
# Load
q()
1750/45
1750/50
24*6
24*5
24*4
.75*5
.75*6
.75*7
100*70
7000/750
100*35
3500/750
7/10
6/9
74/87
q()
1-.64
sqrt(.64*.36/100)
.64/sqrt(100)
0.64*.36/sqrt(!00)
0.64*.36/sqrt(100)
30*.64
30*.36
25*.36
29*.36
(0.55-0.64)/0.048
(0.55-0.64)/0.064
(0.55-0.64)/0.023
(0.64-0.58)/0.023
(0.64-0.55)/0.023
(0.64-0.55)/0.048
(0.55-0.64)/0.023
136/12
158/12
6,000 lodging and food
replacement value
1,000 for theft of jewelery
2500 + 2500 + 1000
up to 150
158/8
25.28 + 21.96*7
179-35
158+35
256/6
q()
load("~/Desktop/millbrae.RData")
millbrae
ls()
set.seed(341)
data(millbrae)
summary(ages)
data(millbrae)
hist(ages)
samp1 <- sample(ages,75)
hist(samp1)
mean(samp1)
set.seed(341)
samp1 <- sample(ages,75)
mean(samp1)
samp2 <- sample(ages,75)
mean(samp2)
fix(samp1)
fix(samp2)
fix(incomes)
fix(samp2)
sample.means <- rep(0,5000)
for(i in 1:5000){ samp <- sample(ages,75) sample.means[i] <- mean(samp) }
for(i in 1:5000){
samp <- sample(ages,75)
sample.means[i] <- mean(samp)
}
hist(sample.means,freq=FALSE)
xbar <- mean(samp1)
se <- sd(samp1)/sqrt(75)
lines(seq(33,52,.1),dnorm(seq(33,52,.1),xbar,se))
hi <- xbar + 1.96*se
lo <- xbar - 1.96*se
fix(samp1)
c(lo,hi)
abline(v=c(lo,hi),col="red")
set.seed(341)
data(millbrae)
load("/Users/mine/Desktop/millbrae.RData")
summary(ages)
hist(ages)
p1 <- sample(ages,75)
samp1 <- sample(ages,75)
fix(`p1`)
rm(p1)
mean(samp1)
set.seed(341)
samp1 <- sample(ages,75)
mean(samp1)
set.seed(341)
data(millbrae)
summary(ages) hist(ages)
summary(ages)
hist(ages)
samp1 <- sample(ages,75)
mean(samp1)
samp2 <- sample(ages,75)
mean(samp2)
sample.means <- rep(0,5000)
for(i in 1:5000){
samp <- sample(ages,75)
sample.means[i] <- mean(samp)
}
hist(sample.means,freq=FALSE)
install.packages("openintro")
?histPlot
library(openintro)
?histPlot
?openintro
xbar <- mean(samp1)
se <- sd(samp1)/sqrt(75)
lines(seq(33,52,.1),dnorm(seq(33,52,.1),xbar,se))
?lines
?seq
?dnorm
1299 + 1699
349.99
1,725 + (3 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055
1725 + (3 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055
1725 * ( (3 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055 )
1725 * ( (4 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055 )
1725 * ( (4 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055 + (12 / 12) * 0.0239)
1725 * (1 + (4 / 12) * 0.0174)* (1 + (12 / 12) * 0.0239)* (1  + (12 / 12) * 0.0322)* (1 + (12 / 12) * 0.0176)* (1 + (12 / 12) * 0.0055)* (1 + (6 / 12) * 0.0055)
1725 * (1 + (4 / 12) * 0.0174)* (1 + (12 / 12) * 0.0239)* (1  + (12 / 12) * 0.0322)* (1 + (12 / 12) * 0.0176)* (1 + (12 / 12) * 0.0055)* (1 + (6 / 12) * 0.0055)
1881.36-1725
156.36+325
1278-1249
125000*.0377
25*6.22
125000*3.77
125000*0.0377
125000 * 0.0377
9+7
library(openintro)
??openintro
help(package="openintro")
library(openintro)
?openintro
q()
538.80 + 277.4 + 50
538.80 + 277.4 + 50 + 80
q()
library(rgeos)
?source
install.packages("HistData")
library(HistData)
?HistData
70*150
10500*1.4
load("/Users/mine/Downloads/todayslab.RData")
load("/Users/mine/Desktop/todayslab.RData")
a
b
c
q()
?maximum
??maximum
/Users/mine/Dropbox/OI Labs/lab2/cdc.R
load("/Users/mine/Dropbox/OI Labs/lab2/cdc.RData")
names(cdc)
wdiff = cdc$weight-cdc$wtdesire
boxplot(wdiff~cdc$gender)
install.packages("openintro")
library(openintro)
boxPlot(wdiff, fact = cdc$gender)
?boxplot
boxplot(bmi ∼ cdc$genhlth)
bmi <- 703*(cdc$weight/cdc$height)
boxplot(bmi ∼ cdc$genhlth)
boxplot(bmi ~ cdc$genhlth)
   boxplot(cdc$height ~ cdc$gender)
q()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 2/1-3numData/figures/meanMed")
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 2/1-3numData/figures/meanMed")
setseed(20)
set.seed(20)
pdf("rs.pdf", width = 5, height = 3)#
rs = rpois(10000,.5)#
d = rs#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Right-skewed")#
axis(1, labels = FALSE)#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()
pdf("sym.pdf", width = 5, height = 3)#
sym = rnorm(10000, 0,1)#
d = sym#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Symmetric")#
axis(1, labels = FALSE)#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()
pdf("ls.pdf", width = 5, height = 3)#
ls = rbeta(10000,8,0.5)#
d = ls#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Left-skewed")#
axis(1, labels = FALSE)#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topleft", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()
par(mar=c(0,0,0,0))#
rs = rpois(10000,.5)#
d = rs#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Right-skewed")#
axis(1, labels = FALSE)#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)
par(mar=c(1,1,1,1))#
rs = rpois(10000,.5)#
d = rs#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Right-skewed")#
axis(1, labels = FALSE)#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)
par(mar=c(1,1,1,1))#
rs = rpois(10000,.5)#
d = rs#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Right-skewed")#
axis(1, labels = FALSE, tick = FALSE)#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)
abline(h = 0, col = "gray")
pdf("rs.pdf", width = 5, height = 3)#
par(mar=c(1,1,1,1))#
rs = rpois(10000,.5)#
d = rs#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Right-skewed")#
abline(h = 0, col = "gray")#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()#
#
pdf("sym.pdf", width = 5, height = 3)#
sym = rnorm(10000, 0,1)#
d = sym#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Symmetric")#
abline(h = 0, col = "gray")#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()#
#
pdf("ls.pdf", width = 5, height = 3)#
ls = rbeta(10000,8,0.5)#
d = ls#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Left-skewed")#
abline(h = 0, col = "gray")#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topleft", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Right-skewed")#
abline(h = 0, col = "gray")#
box()
pdf("rs.pdf", width = 5, height = 3)#
par(mar=c(1,1,1,1))#
rs = rpois(10000,.5)#
d = rs#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Right-skewed")#
abline(h = 0, col = "gray")#
box()#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()#
#
pdf("sym.pdf", width = 5, height = 3)#
par(mar=c(1,1,1,1))#
sym = rnorm(10000, 0,1)#
d = sym#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Symmetric")#
abline(h = 0, col = "gray")#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()#
#
pdf("ls.pdf", width = 5, height = 3)#
par(mar=c(1,1,1,1))#
ls = rbeta(10000,8,0.5)#
d = ls#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Left-skewed")#
abline(h = 0, col = "gray")#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topleft", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()
pdf("rs.pdf", width = 5, height = 3)#
par(mar=c(1,1,1,1))#
rs = rpois(10000,.5)#
d = rs#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Right-skewed")#
abline(h = 0, col = "gray")#
box()#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()#
#
pdf("sym.pdf", width = 5, height = 3)#
par(mar=c(1,1,1,1))#
sym = rnorm(10000, 0,1)#
d = sym#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Symmetric")#
abline(h = 0, col = "gray")#
box()#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topright", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()#
#
pdf("ls.pdf", width = 5, height = 3)#
par(mar=c(1,1,1,1))#
ls = rbeta(10000,8,0.5)#
d = ls#
plot(density(d), axes = FALSE, xlab = "", ylab = "", main = "Left-skewed")#
abline(h = 0, col = "gray")#
box()#
abline(v = mean(d), col = "blue", lty = 2, lwd = 3)#
abline(v = median(d), col = "darkgreen", lty = 1, lwd = 3)#
legend("topleft", inset = 0.05, col = c("blue","darkgreen"), legend = c("mean","median"), lty = c(2,1), lwd = 3)#
dev.off()
1/5
5/15
7/28
0/1
621/2142
538/1055
a = read.csv("/Users/mine/Desktop/Teaching/Sta 101 - F11/caosPre.csv", h = T)
dim(a)
hist(a$percCorr)
class(a$percCorr)
names(a)
a = read.csv("/Users/mine/Desktop/Teaching/Sta 101 - F11/caosPre.csv", h = T)
dim(a)
hist(a$percCorr)
caos = read.csv("/Users/mine/Desktop/Teaching/Sta 101 - F11/caosPre.csv", h = T)
hist(caos$percCorr)
