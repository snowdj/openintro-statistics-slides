??predict.glm
27/80
(.3375-.3)/sqrt(.3*.7/80)
q()
(10/34)-(4/16)
30/150
40 / 150
(.25-.20)/sqrt(.20*.80/100)
1-.8944
50*.2
(.25-.20)/sqrt(.20*.80/105)
(.25-.20)/sqrt(.20*.80/150)
(.25-.20)/sqrt(.20*.80/200)
(.25-.20)/sqrt(.20*.80/250)
(.25-.20)/sqrt(.20*.80/300)
1-.4271
1-.4371
q()
ls()
# Coda: for MCMC output#
# RColorBrewer: for gradient maps#
# WinBugs#
# rgeos: for manipulating shape files#
# maptools: for plotting shape files#
# RgoogleMaps: for plotting on a google map#
# rgdal: required for RgoogleMaps#
# grid: for Grob functions#
#
##############################################################################
# Install#
##############################################################################
#
# #
#
install.packages("coda")#
install.packages("RColorBrewer")#
install.packages("R2WinBUGS")#
install.packages("rgeos")#
install.packages("maptools")#
install.packages("RgoogleMaps")#
install.packages("rgdal", type = source)	# from source, not binary#
install.packages("grid")	# from source, not binary#
#
# Load#
#
library(coda)#
library(RColorBrewer)#
library(R2WinBUGS)#
library(rgeos)#
library(maptools)#
library(RgoogleMaps)#
library(rgdal)#
library(grid)#
#
##############################################################################
# Load
q()
1750/45
1750/50
24*6
24*5
24*4
.75*5
.75*6
.75*7
100*70
7000/750
100*35
3500/750
7/10
6/9
74/87
q()
1-.64
sqrt(.64*.36/100)
.64/sqrt(100)
0.64*.36/sqrt(!00)
0.64*.36/sqrt(100)
30*.64
30*.36
25*.36
29*.36
(0.55-0.64)/0.048
(0.55-0.64)/0.064
(0.55-0.64)/0.023
(0.64-0.58)/0.023
(0.64-0.55)/0.023
(0.64-0.55)/0.048
(0.55-0.64)/0.023
136/12
158/12
6,000 lodging and food
replacement value
1,000 for theft of jewelery
2500 + 2500 + 1000
up to 150
158/8
25.28 + 21.96*7
179-35
158+35
256/6
q()
load("~/Desktop/millbrae.RData")
millbrae
ls()
set.seed(341)
data(millbrae)
summary(ages)
data(millbrae)
hist(ages)
samp1 <- sample(ages,75)
hist(samp1)
mean(samp1)
set.seed(341)
samp1 <- sample(ages,75)
mean(samp1)
samp2 <- sample(ages,75)
mean(samp2)
fix(samp1)
fix(samp2)
fix(incomes)
fix(samp2)
sample.means <- rep(0,5000)
for(i in 1:5000){ samp <- sample(ages,75) sample.means[i] <- mean(samp) }
for(i in 1:5000){
samp <- sample(ages,75)
sample.means[i] <- mean(samp)
}
hist(sample.means,freq=FALSE)
xbar <- mean(samp1)
se <- sd(samp1)/sqrt(75)
lines(seq(33,52,.1),dnorm(seq(33,52,.1),xbar,se))
hi <- xbar + 1.96*se
lo <- xbar - 1.96*se
fix(samp1)
c(lo,hi)
abline(v=c(lo,hi),col="red")
set.seed(341)
data(millbrae)
load("/Users/mine/Desktop/millbrae.RData")
summary(ages)
hist(ages)
p1 <- sample(ages,75)
samp1 <- sample(ages,75)
fix(`p1`)
rm(p1)
mean(samp1)
set.seed(341)
samp1 <- sample(ages,75)
mean(samp1)
set.seed(341)
data(millbrae)
summary(ages) hist(ages)
summary(ages)
hist(ages)
samp1 <- sample(ages,75)
mean(samp1)
samp2 <- sample(ages,75)
mean(samp2)
sample.means <- rep(0,5000)
for(i in 1:5000){
samp <- sample(ages,75)
sample.means[i] <- mean(samp)
}
hist(sample.means,freq=FALSE)
install.packages("openintro")
?histPlot
library(openintro)
?histPlot
?openintro
xbar <- mean(samp1)
se <- sd(samp1)/sqrt(75)
lines(seq(33,52,.1),dnorm(seq(33,52,.1),xbar,se))
?lines
?seq
?dnorm
1299 + 1699
349.99
1,725 + (3 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055
1725 + (3 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055
1725 * ( (3 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055 )
1725 * ( (4 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055 )
1725 * ( (4 / 12) * 0.0174 + (12 / 12) * 0.0322 + (12 / 12) * 0.0176 + (12 / 12) * 0.0055 + (6 / 12) * 0.0055 + (12 / 12) * 0.0239)
1725 * (1 + (4 / 12) * 0.0174)* (1 + (12 / 12) * 0.0239)* (1  + (12 / 12) * 0.0322)* (1 + (12 / 12) * 0.0176)* (1 + (12 / 12) * 0.0055)* (1 + (6 / 12) * 0.0055)
1725 * (1 + (4 / 12) * 0.0174)* (1 + (12 / 12) * 0.0239)* (1  + (12 / 12) * 0.0322)* (1 + (12 / 12) * 0.0176)* (1 + (12 / 12) * 0.0055)* (1 + (6 / 12) * 0.0055)
1881.36-1725
156.36+325
1278-1249
125000*.0377
25*6.22
125000*3.77
125000*0.0377
125000 * 0.0377
9+7
library(openintro)
??openintro
help(package="openintro")
library(openintro)
?openintro
q()
538.80 + 277.4 + 50
538.80 + 277.4 + 50 + 80
q()
library(rgeos)
source("http://www.stat.ucla.edu/~cocteau/stat13/data/arbuthnot.R")
ls()
write.table(arbuthnot, file = "arbuthnot.txt")
plot(arbuthnot$year, arbuthnot$boys+arbuthnot$girls, type="l")
q()
#
set.seed(51)#
x1 <- rchisq(65, 6)#
x2 <- c(rchisq(22, 5.8), rnorm(40, 16.5, 2))#
x3 <- c(rchisq(20, 3), rnorm(35, 12), rnorm(42, 18, 1.5))#
x4 <- runif(100,0,20)#
#
par(mfrow=c(1,3), mar=c(1.9, 2, 1, 2), mgp=c(2.4, 0.7, 0))#
#
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)#
#
histPlot(x3, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)#
#
histPlot(x4, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)
library(openintro)
#
set.seed(51)#
x1 <- rchisq(65, 6)#
x2 <- c(rchisq(22, 5.8), rnorm(40, 16.5, 2))#
x3 <- c(rchisq(20, 3), rnorm(35, 12), rnorm(42, 18, 1.5))#
x4 <- runif(100,0,20)#
#
par(mfrow=c(1,3), mar=c(1.9, 2, 1, 2), mgp=c(2.4, 0.7, 0))#
#
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)#
#
histPlot(x3, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)#
#
histPlot(x4, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)
?runif
#
set.seed(51)#
x1 <- rchisq(65, 6)#
x2 <- c(rchisq(22, 5.8), rnorm(40, 16.5, 2))#
x3 <- c(rchisq(20, 3), rnorm(35, 12), rnorm(42, 18, 1.5))#
x4 <- runif(100,0,20)#
#
par(mfrow=c(1,4), mar=c(1.9, 2, 1, 2), mgp=c(2.4, 0.7, 0))#
#
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)#
#
histPlot(x3, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)#
#
histPlot(x4, axes=FALSE, xlab='', ylab='', returnPar=FALSE)#
axis(1)#
axis(2)
#
set.seed(51)#
x1 <- rchisq(65, 6)#
x2 <- c(rchisq(22, 5.8), rnorm(40, 16.5, 2))#
x3 <- c(rchisq(20, 3), rnorm(35, 12), rnorm(42, 18, 1.5))#
x4 <- runif(100,0,20)#
#
par(mfrow=c(1,4), mar=c(1.9, 2, 1, 2), mgp=c(2.4, 0.7, 0))#
#
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x3, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x4, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 2/1-3numData/figures/singleBiMultiModalUnifPlots")
#
set.seed(51)#
x1 <- rchisq(65, 6)#
x2 <- c(rchisq(22, 5.8), rnorm(40, 16.5, 2))#
x3 <- c(rchisq(20, 3), rnorm(35, 12), rnorm(42, 18, 1.5))#
x4 <- runif(100,0,20)#
#
pdf("singleBiMultiModalUnifPlots.pdf", width = 7, height = 3)#
#
par(mfrow=c(1,4), mar=c(1.9, 2, 1, 2), mgp=c(2.4, 0.7, 0))#
#
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x3, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x4, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
dev.off()
set.seed(234)#
x1 <- rchisq(65, 3)
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)
x2 <- c(runif(22, 0,5), rnorm(40, 16.5, 2))
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)
x2 <- c(runif(100, 0,5), rnorm(40, 16.5, 2))
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)
x2 <- c(runif(20, 0,5), rnorm(100, 16.5, 2))
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)
x2 <- c(runif(20, 0,10), rnorm(100, 16.5, 2))
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 2/1-3numData/figures/skewedSymPlots")
set.seed(234)#
x1 <- rchisq(65, 3)#
x2 <- c(runif(20, 0,10), rnorm(100, 16.5, 2))#
x3 <- rnorm(100, 35, 12)#
#
pdf("skewedSymPlots.pdf", width = 7, height = 3)#
#
par(mfrow=c(1,3), mar=c(1.9, 2, 1, 2), mgp=c(2.4, 0.7, 0))#
#
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x3, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
dev.off()
set.seed(195)#
x1 <- c(rchisq(65, 3), 20)#
x2 <- rnorm(100, 35, 10)
par(mfrow=c(1,3), mar=c(1.9, 2, 1, 2), mgp=c(2.4, 0.7, 0))#
#
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)
par(mfrow=c(1,2), mar=c(1.9, 2, 1, 2), mgp=c(2.4, 0.7, 0))#
#
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)
x2 <- c(rnorm(100, 35, 10), rnorm(3, 100,3))
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 2/1-3numData/figures/outlierPlots")
set.seed(195)#
x1 <- c(rchisq(65, 3), 20)#
x2 <- c(rnorm(100, 35, 10), rnorm(3, 100,3))#
#
pdf("outlierPlots.pdf", width = 7, height = 3)#
#
par(mfrow=c(1,2), mar=c(1.9, 2, 1, 2), mgp=c(2.4, 0.7, 0))#
#
histPlot(x1, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
histPlot(x2, axes=FALSE, xlab='', ylab='', returnPar=FALSE, col="#22558833", border="#225588")#
axis(1)#
axis(2)#
#
dev.off()
boxPlot(cars$data)
boxplot(cars$data)
boxplot(cars$price)
boxplot(cars$prices)
boxPlot(cars$prices)
cars$prices
cars$price
data(cars)
cars$price
boxPlot(cars$price)
q1(cars$price)
Q1(cars$price)
summary(cars$price)
26.25 - 10.95
26.25 + 1.5 * 10.95
26.25 + 1.5 * 15.3
10.95 - 1.5 * 15.3
order(cars$prices)
order(cars$price)
cars[20,]
cars[36,]
?openintro
data(MLB)
?MLB
order(MLB$salary)
tail(order(MLB$salary))
MLB[tail(order(MLB$salary)),]
MLB[-tail(order(MLB$salary)),]
MLB[tail(order(MLB$salary)),]
MLB[rev(tail(order(MLB$salary))),]
MLB$salary = MLB$salary/1000
MLB[rev(tail(order(MLB$salary))),]
xtable( MLB[rev(tail(order(MLB$salary))),])
library(xtable)
xtable( MLB[rev(tail(order(MLB$salary))),])
?xtable
MLB[rev(tail(order(MLB$salary))),]
MLB[rev(tail(order(MLB$salary))),4]
log(MLB[rev(tail(order(MLB$salary))),4])
round(log(MLB[rev(tail(order(MLB$salary))),4]), 2)
source("/Users/mine/Desktop/Teaching/Sta 101 - F11/Labs/Lab 2/cdc.R")
source("/Users/mine/Desktop/Teaching/Sta 101 - F11/Labs/Lab 2/cdc_2.R")
source("/Users/mine/Desktop/Teaching/Sta 101 - F11/Labs/Lab 2/cdc_2.R")
dim(cdc_2)
ls()
dim(cdc)
70*150
10500*1.4
10500*1.4+3000*.57
q()
