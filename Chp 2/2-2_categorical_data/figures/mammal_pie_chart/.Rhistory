power.20.01 = rep(0, 46)
for (i in 5:50){
power.test = pwr.t2n.test(n1 = i, n2 = i*19, d = 20/70, sig.level = .01, alternative = "greater")
power.20.01[i-4] = power.test$power
}
plot(seq(5,50,1), power.20.01, type = "l", main = "Effect Size = 20, Alpha = .01", xlab = "Number of Cancer Patients", ylab = "Power")
power.30.01 = rep(0, 46)
for (i in 5:50){
power.test = pwr.t2n.test(n1 = i, n2 = i*19, d = 30/70, sig.level = .01, alternative = "greater")
power.30.01[i-4] = power.test$power
}
plot(seq(5,50,1), power.30.01, type = "l", main = "Effect Size = 30, Alpha = .01", xlab = "Number of Cancer Patients", ylab = "Power")
power.40.01 = rep(0, 46)
for (i in 5:50){
power.test = pwr.t2n.test(n1 = i, n2 = i*19, d = 40/70, sig.level = .01, alternative = "greater")
power.40.01[i-4] = power.test$power
}
min(which(power.40.01 >= .8))+4
(min(which(power.40.01 >= .8))+4) * 19
min(which(power.40.01 >= .9))+4
(min(which(power.40.01 >= .9))+4) * 19
power.50.01 = rep(0, 46)
for (i in 5:50){
power.test = pwr.t2n.test(n1 = i, n2 = i*19, d = 50/70, sig.level = .01, alternative = "greater")
power.50.01[i-4] = power.test$power
}
plot(seq(5,50,1), power.50.01, type = "l", main = "Effect Size = 50, Alpha = .01", xlab = "Number of Cancer Patients", ylab = "Power")
min(which(power.50.01 >= .8))+4
(min(which(power.50.01 >= .8))+4) * 19
min(which(power.50.01 >= .9))+4
(min(which(power.50.01 >= .9))+4) * 19
power.20.05 = rep(0, 46)
for (i in 5:50){
power.test = pwr.t2n.test(n1 = i, n2 = i*19, d = 20/70, sig.level = .05, alternative = "greater")
power.20.05[i-4] = power.test$power
}
plot(seq(5,50,1), power.20.05, type = "l", main = "Effect Size = 20, Alpha = .05", xlab = "Number of Cancer Patients", ylab = "Power")
min(which(power.20.05 >= .9))+4
power.30.05 = rep(0, 46)
for (i in 5:50){
power.test = pwr.t2n.test(n1 = i, n2 = i*19, d = 30/70, sig.level = .05, alternative = "greater")
power.30.05[i-4] = power.test$power
}
plot(seq(5,50,1), power.30.05, type = "l", main = "Effect Size = 30, Alpha = .05", xlab = "Number of Cancer Patients", ylab = "Power")
min(which(power.30.05 >= .8))+4
(min(which(power.30.05 >= .8))+4) * 19
min(which(power.30.05 >= .9))+4
(min(which(power.30.05 >= .9))+4) * 19
power.40.05 = rep(0, 46)
for (i in 5:50){
power.test = pwr.t2n.test(n1 = i, n2 = i*19, d = 40/70, sig.level = .05, alternative = "greater")
power.40.05[i-4] = power.test$power
}
plot(seq(5,50,1), power.40.05, type = "l", main = "Effect Size = 40, Alpha = .05", xlab = "Number of Cancer Patients", ylab = "Power")
@
min(which(power.40.05 >= .8))+4
(min(which(power.40.05 >= .8))+4) * 19
min(which(power.40.05 >= .9))+4
(min(which(power.40.05 >= .9))+4) * 19
power.50.05 = rep(0, 46)
for (i in 5:50){
power.test = pwr.t2n.test(n1 = i, n2 = i*19, d = 50/70, sig.level = .05, alternative = "greater")
power.50.05[i-4] = power.test$power
}
plot(seq(5,50,1), power.50.05, type = "l", main = "Effect Size = 50, Alpha = .05", xlab = "Number of Cancer Patients", ylab = "Power")
min(which(power.50.05 >= .8))+4
(min(which(power.50.05 >= .8))+4) * 19
min(which(power.50.05 >= .9))+4
(min(which(power.50.05 >= .9))+4) * 19
power.20.01 = rep(0, 46)
power.20.01
6658.33*12
79900/12*2
79900/9*2
q()
79900/12*2
79900/9*2
24000/9*2
17755.56+5333.33+1000
16655.56+5333.33+5000+21580+3000+1000
17755.56+5333.33+5000+21580+3000+1000
17755.56/2+5333.33+5000+21580+3000+1000
17755.56/2+5333.33+5000+21580/2+3000+1000
q()
79900/9
21580.00/2
8877.78+5333.33+5000+10790+3000+1000
8877+5333+5000+10790+3000+1000
8877+5333+2500+10790+3000+1000
?barplot
library(openintro)
?openintro
data()
q()
5.05-4.2
.85/.53
pt(1.604,df=27)
pt(1.604,df=27, lower.tail = TRUE)
pt(1.604,df=27, lower.tail = FALSE)
pt(1.604,df=27, lower.tail = FALSE)*2
q()
a = c(NA,"baba","ddd","ddd")
barplot(table(a))
d = c(NA,2,3,3)
table(a,b)
table(a,d)
barplot(table(a,d))
q()
65*20
q()
17*.65
17*.50
705-275
download.file("http://www.openintro.org/stat/data/kobe.RData", destfile = "kobe.RData")#
load("kobe.RData")
kobe
download.file("http://www.openintro.org/stat/data/bdims.RData", destfile = "bdims.RData")#
load("bdims.RData")
q()
120*4+100*4+50*4
q()
15*62
11*62
10.15*62
q()
16*5
400+480
211000*.02
q()
install.packages("Zillow")
install.packages("RCulr")
install.packages("RCurl")
library(RCurl)
reply = getForm("http://www.zillow.com/webservice/GetSearchResults.htm",#
 'zws-id' = "AB-XXXXXXXXXXX_10312q",#
 address = "1093 Zuchini Way", #
 citystatezip = "Berkeley, CA, 94212")
reply
doc = #
 xmlTreeParse(reply, asText = TRUE, useInternal = TRUE)
q()
install.packages("openintro")
library(openintro)
?dotPlotStack
dotPlotStack <- function(x, overlap=0.015, pch=20, cex=4, col='#33558888', xlim=NULL, ylim=NULL, ...){#
#	x <- sort(x)#
	n <- length(x)#
	if(is.null(xlim)[1]){#
		xlim <- range(x)#
	}#
	xRange <- diff(xlim)#
	d <- matrix(NA,n,n)#
	for(i in 1:n){ for(j in 1:n){#
		d[i,j] <- abs(x[i] - x[j])#
	}}#
	u <- rep(FALSE, n)#
	y <- rep(-1,n)#
	u[1] <- TRUE#
	y[1] <- 1#
	m <- which.max(d[u,!u])#
	y[!u][m] <- 1#
	u[!u][m] <- TRUE#
	k <- 1#
	while(sum(!u) > 1){#
		k <- k+1#
		m <- apply(d[u,], 2, min)#
		Next <- which.max(m)#
		y[Next] <- sum(d[Next,u]/xRange < overlap)+1#
		u[Next] <- TRUE#
		if(k > 200){#
			cat('crap!\n')#
			break#
		}#
	}#
	Next <- which(!u)#
	y[Next] <- sum(d[Next,u]/xRange < overlap)#
	u[Next] <- TRUE#
#	which(abs(x - x[1])#
#	for(i in 1:n){#
#		y[i] <- sum(abs(x[1:i] - x[i])/xRange < overlap)#
#		temp <- abs(x - x[i])/xRange#
#		temp <- sum(temp < overlap)#
#		if(temp > maxHeight){#
#			maxHeight <- temp#
#		}#
#	}#
	if(is.null(ylim)[1]){#
		ylim <- c(0, max(y))#
	}#
	plot(xlim, ylim, type='n', ...)#
#	for(i in 1:n){#
#		y <- sum(abs(x[1:i] - x[i])/xRange < overlap)#
		points(x, y, pch=pch, col=col, cex=cex)#
#	}#
}#
#
x <- rnorm(100)#
dotPlotStack(x)
setwd("~/Desktop/OI Slides/Chp 1/1-6_numerical_data/figures/gpa_dot_plot")
d = read.csv("gpa.csv")
gpa = d$gpa[d$gpa <= 4]#
gpa = gpa[!is.na(gpa)]
dotPlotStack(gpa)
dotPlotStack <- function(x, radius=1, seed=1, addDots=TRUE, ...){#
  set.seed(seed)#
  x <- sample(x)#
  y <- rep(NA, length(x))#
  y[1] <- 1#
  for(i in 2:length(x)){#
    add <- TRUE#
    for(s in seq(radius, i*radius, radius/20)){#
      these <- 1:(i-1)#
      dx    <- (x[i] - x[these])^2#
      dy    <- (s - y[these])^2#
      if(any(dx+dy < radius^2) || !add){#
        next#
      } else {#
        if(addDots){#
          points(x[i], s, ...)#
        }#
        y[i] <- s#
        add  <- FALSE#
      }#
    }#
  }#
  invisible(list(max(y)+radius, x, y))#
}
dotPlotStack(gpa)
dotPlotStack(gpa)
plot(gpa)
hist(gpa, type="n")
?hist
hist(gpa, type="n")
?hist
hist(gpa, plot = FALSE)
dotPlotStack(gpa)
setwd("~/Desktop/OI Slides/Chp 1/1-6_numerical_data/figures/study_hours")
library(openintro)#
data(COL)#
#
d = read.csv("study_hours.csv")#
#
study_hours = d$study_hours[!is.na(d$study_hours)]
par(mar=c(0.8,4,0,1), mgp=c(2.8, 0.7, 0), las=1)#
#
boxPlot(study_hours, col = COL[1,3], ylab = "# of study hours / week", axes=FALSE, xlim = c(0,3.5), pch = 20)#
axis(2)#
#
arrows(2,0, 1.33,min(study_hours)-0.5, length=0.08)#
text(2,0,'lower whisker', pos=4)#
#
arrows(2, 8, 1.33, quantile(study_hours, 0.25), length=0.08)#
text(2,8,expression(Q[1]~~'(first quartile)'), pos=4)#
#
m <- median(study_hours)#
arrows(2, m, 1.33, m, length=0.08)#
text(2,m,'median', pos=4)#
#
q <- quantile(study_hours, 0.75)#
arrows(2, q, 1.33, q, length=0.08)#
text(2,q,expression(Q[3]~~'(third quartile)'), pos=4)#
#
arrows(2, 30, 1.33, 30, length=0.08)#
text(2,30,'upper whisker', pos=4)#
#
arrows(2, q+1.5*IQR(study_hours)-0.65, 1.33, q+1.5*IQR(study_hours)-0.65, length=0.08)#
lines(c(0.72,1.28), rep(q+1.5*IQR(study_hours)-0.65,2), lty=3, col='#00000066')#
text(2,q+1.5*IQR(study_hours)-0.65,'max whisker reach', pos=4)#
#
arrows(2, 37.5, 1.33, 40, length=0.08)#
arrows(2, 37.5, 1.33, 35, length=0.08)#
text(2,37.5,'suspected outliers', pos=4)#
#
points(rep(0.4, 27), rev(sort(study_hours))[1:27], cex=rep(1.5, 27), col=rep(COL[1,3], 27), pch=rep(20, 27))#
points(rep(0.4, 27), sort(study_hours)[1:27], cex=rep(1, 27), col=rep(COL[2], 27), pch=rep(1, 27))
locator(1)
locator(1)
par(mar=c(0.8,4,0,1), mgp=c(2.8, 0.7, 0), las=1)#
#
boxPlot(study_hours, col = COL[1,3], ylab = "# of study hours / week", axes=FALSE, xlim = c(0,3.5), pch = 20)#
axis(2)#
#
arrows(2,0, 1.40,min(study_hours)-0.5, length=0.08)#
text(2,0,'lower whisker', pos=4)#
#
arrows(2, 8, 1.40, quantile(study_hours, 0.25), length=0.08)#
text(2,8,expression(Q[1]~~'(first quartile)'), pos=4)#
#
m <- median(study_hours)#
arrows(2, m, 1.40, m, length=0.08)#
text(2,m,'median', pos=4)#
#
q <- quantile(study_hours, 0.75)#
arrows(2, q, 1.40, q, length=0.08)#
text(2,q,expression(Q[3]~~'(third quartile)'), pos=4)#
#
arrows(2, 30, 1.40, 30, length=0.08)#
text(2,30,'upper whisker', pos=4)#
#
arrows(2, q+1.5*IQR(study_hours)-0.65, 1.40, q+1.5*IQR(study_hours)-0.65, length=0.08)#
lines(c(0.72,1.28), rep(q+1.5*IQR(study_hours)-0.65,2), lty=3, col='#00000066')#
text(2,q+1.5*IQR(study_hours)-0.65,'max whisker reach', pos=4)#
#
arrows(2, 37.5, 1.40, 40, length=0.08)#
arrows(2, 37.5, 1.40, 35, length=0.08)#
text(2,37.5,'suspected outliers', pos=4)#
#
points(rep(0.4, 27), rev(sort(study_hours))[1:27], cex=rep(1.5, 27), col=rep(COL[1,3], 27), pch=rep(20, 27))#
points(rep(0.4, 27), sort(study_hours)[1:27], cex=rep(1, 27), col=rep(COL[2], 27), pch=rep(1, 27))
par(mar=c(0.8,4,0,1), mgp=c(2.8, 0.7, 0), las=1)#
#
boxPlot(study_hours, col = COL[1,3], ylab = "# of study hours / week", axes=FALSE, xlim = c(0,3.5), pch = 20)#
axis(2)#
#
arrows(2,0, 1.40,min(study_hours)-0.5, length=0.08)#
text(2,0,'lower whisker', pos=4)#
#
arrows(2, 8, 1.40, quantile(study_hours, 0.25), length=0.08)#
text(2,8,expression(Q[1]~~'(first quartile)'), pos=4)#
#
m <- median(study_hours)#
arrows(2, m, 1.40, m, length=0.08)#
text(2,m,'median', pos=4)#
#
q <- quantile(study_hours, 0.75)#
arrows(2, q, 1.40, q, length=0.08)#
text(2,q,expression(Q[3]~~'(third quartile)'), pos=4)#
#
arrows(2, 30, 1.40, 30, length=0.08)#
text(2,30,'upper whisker', pos=4)#
#
arrows(2, q+1.5*IQR(study_hours)-0.65, 1.40, q+1.5*IQR(study_hours)-0.65, length=0.08)#
lines(c(0.72,1.28), rep(q+1.5*IQR(study_hours)-0.65,2), lty=3, col='#00000066')#
text(2,q+1.5*IQR(study_hours)-0.65,'max whisker reach', pos=4)#
#
arrows(2, 37.5, 1.40, 40, length=0.08)#
arrows(2, 37.5, 1.40, 35, length=0.08)#
text(2,37.5,'suspected outliers', pos=4)
par(mar=c(0.8,4,0,1), mgp=c(2.8, 0.7, 0), las=1)#
#
boxPlot(study_hours, col = COL[1,3], ylab = "# of study hours / week", axes=FALSE, xlim = c(0,3.5), pch = 20)#
axis(2)#
#
arrows(2,0, 1.40,min(study_hours)-0.5, length=0.08)#
text(2,0,'lower whisker', pos=4)#
#
arrows(2, 8, 1.40, quantile(study_hours, 0.25), length=0.08)#
text(2,8,expression(Q[1]~~'(first quartile)'), pos=4)#
#
m <- median(study_hours)#
arrows(2, m, 1.40, m, length=0.08)#
text(2,m,'median', pos=4)#
#
q <- quantile(study_hours, 0.75)#
arrows(2, q, 1.40, q, length=0.08)#
text(2,q,expression(Q[3]~~'(third quartile)'), pos=4)#
#
arrows(2, 30, 1.40, 30, length=0.08)#
text(2,30,'upper whisker', pos=4)#
#
arrows(2, q+1.5*IQR(study_hours)-0.65, 1.40, q+1.5*IQR(study_hours)-0.65, length=0.08)#
lines(c(0.72,1.28), rep(q+1.5*IQR(study_hours)-0.65,2), lty=3, col='#00000066')#
text(2,q+1.5*IQR(study_hours)-0.65,'max whisker reach', pos=4)#
#
arrows(2, 37.5, 1.40, 40, length=0.08)#
arrows(2, 37.5, 1.40, 35, length=0.08)#
text(2,37.5,'suspected outliers', pos=4)#
#
points(rep(0.4, 27), rev(sort(study_hours))[1:27], cex=rep(1.5, 27), col=rep(COL[1,3], 27), pch=rep(20, 27))
locator(1)
study_hours
length(study_hours)
198.4
198/4
summary(study_hours)
which(study_hours < q1(study_hours)-1.5*iqr(study_hours))
which(study_hours < 10.00-1.5*IQR(study_hours))
which(study_hours < 10.00)
which(study_hours > 20 10.00)
which(study_hours > 20)
198/2
par(mar=c(0.8,4,0,1), mgp=c(2.8, 0.7, 0), las=1)#
#
boxPlot(study_hours, col = COL[1,3], ylab = "# of study hours / week", axes=FALSE, xlim = c(0,3.5), pch = 20)#
axis(2)#
#
arrows(2,0, 1.40,min(study_hours)-0.5, length=0.08)#
text(2,0,'lower whisker', pos=4)#
#
arrows(2, 8, 1.40, quantile(study_hours, 0.25), length=0.08)#
text(2,8,expression(Q[1]~~'(first quartile)'), pos=4)#
#
m <- median(study_hours)#
arrows(2, m, 1.40, m, length=0.08)#
text(2,m,'median', pos=4)#
#
q <- quantile(study_hours, 0.75)#
arrows(2, q, 1.40, q, length=0.08)#
text(2,q,expression(Q[3]~~'(third quartile)'), pos=4)#
#
arrows(2, 30, 1.40, 30, length=0.08)#
text(2,30,'upper whisker', pos=4)#
#
arrows(2, q+1.5*IQR(study_hours)-0.65, 1.40, q+1.5*IQR(study_hours)-0.65, length=0.08)#
lines(c(0.72,1.28), rep(q+1.5*IQR(study_hours)-0.65,2), lty=3, col='#00000066')#
text(2,q+1.5*IQR(study_hours)-0.65,'max whisker reach', pos=4)#
#
arrows(2, 37.5, 1.40, 40, length=0.08)#
arrows(2, 37.5, 1.40, 35, length=0.08)#
text(2,37.5,'suspected outliers', pos=4)#
#
points(rep(0.4, 99), rev(sort(study_hours))[1:99], cex=rep(1.5, 27), col=rep(COL[1,3], 27), pch=rep(20, 27))#
points(rep(0.4, 99), sort(study_hours)[1:99], cex=rep(1, 27), col=rep(COL[2], 27), pch=rep(1, 27))
par(mar=c(0.8,4,0,1), mgp=c(2.8, 0.7, 0), las=1)#
#
boxPlot(study_hours, col = COL[1,3], ylab = "# of study hours / week", axes=FALSE, xlim = c(0,3.5), pch = 20)#
axis(2)#
#
arrows(2,0, 1.40,min(study_hours)-0.5, length=0.08)#
text(2,0,'lower whisker', pos=4)#
#
arrows(2, 8, 1.40, quantile(study_hours, 0.25), length=0.08)#
text(2,8,expression(Q[1]~~'(first quartile)'), pos=4)#
#
m <- median(study_hours)#
arrows(2, m, 1.40, m, length=0.08)#
text(2,m,'median', pos=4)#
#
q <- quantile(study_hours, 0.75)#
arrows(2, q, 1.40, q, length=0.08)#
text(2,q,expression(Q[3]~~'(third quartile)'), pos=4)#
#
arrows(2, 30, 1.40, 30, length=0.08)#
text(2,30,'upper whisker', pos=4)#
#
arrows(2, q+1.5*IQR(study_hours)-0.65, 1.40, q+1.5*IQR(study_hours)-0.65, length=0.08)#
lines(c(0.72,1.28), rep(q+1.5*IQR(study_hours)-0.65,2), lty=3, col='#00000066')#
text(2,q+1.5*IQR(study_hours)-0.65,'max whisker reach', pos=4)#
#
arrows(2, 37.5, 1.40, 40, length=0.08)#
arrows(2, 37.5, 1.40, 35, length=0.08)#
text(2,37.5,'suspected outliers', pos=4)#
#
points(rep(0.4, 99), rev(sort(study_hours))[1:99], cex=rep(1.5, 27), col=rep(COL[1,3], 99), pch=rep(20, 99))#
points(rep(0.4, 99), sort(study_hours)[1:99], cex=rep(1, 27), col=rep(COL[2], 99), pch=rep(1, 99))
par(mar=c(0.8,4,0,1), mgp=c(2.8, 0.7, 0), las=1)#
#
boxPlot(study_hours, col = COL[1,3], ylab = "# of study hours / week", axes=FALSE, xlim = c(0,3.5), pch = 20)#
axis(2)#
#
arrows(2,0, 1.40,min(study_hours)-0.5, length=0.08)#
text(2,0,'lower whisker', pos=4)#
#
arrows(2, 8, 1.40, quantile(study_hours, 0.25), length=0.08)#
text(2,8,expression(Q[1]~~'(first quartile)'), pos=4)#
#
m <- median(study_hours)#
arrows(2, m, 1.40, m, length=0.08)#
text(2,m,'median', pos=4)#
#
q <- quantile(study_hours, 0.75)#
arrows(2, q, 1.40, q, length=0.08)#
text(2,q,expression(Q[3]~~'(third quartile)'), pos=4)#
#
arrows(2, 30, 1.40, 30, length=0.08)#
text(2,30,'upper whisker', pos=4)#
#
arrows(2, q+1.5*IQR(study_hours)-0.65, 1.40, q+1.5*IQR(study_hours)-0.65, length=0.08)#
lines(c(0.72,1.28), rep(q+1.5*IQR(study_hours)-0.65,2), lty=3, col='#00000066')#
text(2,q+1.5*IQR(study_hours)-0.65,'max whisker reach', pos=4)#
#
arrows(2, 37.5, 1.40, 40, length=0.08)#
arrows(2, 37.5, 1.40, 35, length=0.08)#
text(2,37.5,'suspected outliers', pos=4)#
#
points(rep(0.4, 99), rev(sort(study_hours))[1:98], cex=rep(1.5, 27), col=rep(COL[1,3], 99), pch=rep(20, 99))#
points(rep(0.4, 99), sort(study_hours)[1:99], cex=rep(1, 27), col=rep(COL[2], 99), pch=rep(1, 99))
par(mar=c(0.8,4,0,1), mgp=c(2.8, 0.7, 0), las=1)#
#
boxPlot(study_hours, col = COL[1,3], ylab = "# of study hours / week", axes=FALSE, xlim = c(0,3.5), pch = 20)#
axis(2)#
#
arrows(2,0, 1.40,min(study_hours)-0.5, length=0.08)#
text(2,0,'lower whisker', pos=4)#
#
arrows(2, 8, 1.40, quantile(study_hours, 0.25), length=0.08)#
text(2,8,expression(Q[1]~~'(first quartile)'), pos=4)#
#
m <- median(study_hours)#
arrows(2, m, 1.40, m, length=0.08)#
text(2,m,'median', pos=4)#
#
q <- quantile(study_hours, 0.75)#
arrows(2, q, 1.40, q, length=0.08)#
text(2,q,expression(Q[3]~~'(third quartile)'), pos=4)#
#
arrows(2, 30, 1.40, 30, length=0.08)#
text(2,30,'upper whisker', pos=4)#
#
arrows(2, q+1.5*IQR(study_hours)-0.65, 1.40, q+1.5*IQR(study_hours)-0.65, length=0.08)#
lines(c(0.72,1.28), rep(q+1.5*IQR(study_hours)-0.65,2), lty=3, col='#00000066')#
text(2,q+1.5*IQR(study_hours)-0.65,'max whisker reach', pos=4)#
#
arrows(2, 37.5, 1.40, 40, length=0.08)#
arrows(2, 37.5, 1.40, 35, length=0.08)#
text(2,37.5,'suspected outliers', pos=4)#
#
points(rep(0.4, 99), rev(sort(study_hours))[1:99], cex=rep(1.5, 27), col=rep(COL[1,3], 99), pch=rep(20, 99))#
points(rep(0.4, 99), sort(study_hours)[1:99], cex=rep(1, 27), col=rep(COL[2], 99), pch=rep(1, 99))
myPDF("study_hours_box_layout.pdf", 6, 4)#
par(mar=c(0.8,4,0,1), mgp=c(2.8, 0.7, 0), las=1)#
#
boxPlot(study_hours, col = COL[1,3], ylab = "# of study hours / week", axes=FALSE, xlim = c(0,3.5), pch = 20)#
axis(2)#
#
arrows(2,0, 1.40,min(study_hours)-0.5, length=0.08)#
text(2,0,'lower whisker', pos=4)#
#
arrows(2, 8, 1.40, quantile(study_hours, 0.25), length=0.08)#
text(2,8,expression(Q[1]~~'(first quartile)'), pos=4)#
#
m <- median(study_hours)#
arrows(2, m, 1.40, m, length=0.08)#
text(2,m,'median', pos=4)#
#
q <- quantile(study_hours, 0.75)#
arrows(2, q, 1.40, q, length=0.08)#
text(2,q,expression(Q[3]~~'(third quartile)'), pos=4)#
#
arrows(2, 30, 1.40, 30, length=0.08)#
text(2,30,'upper whisker', pos=4)#
#
arrows(2, q+1.5*IQR(study_hours)-0.65, 1.40, q+1.5*IQR(study_hours)-0.65, length=0.08)#
lines(c(0.72,1.28), rep(q+1.5*IQR(study_hours)-0.65,2), lty=3, col='#00000066')#
text(2,q+1.5*IQR(study_hours)-0.65,'max whisker reach', pos=4)#
#
arrows(2, 37.5, 1.40, 40, length=0.08)#
arrows(2, 37.5, 1.40, 35, length=0.08)#
text(2,37.5,'suspected outliers', pos=4)#
#
points(rep(0.4, 99), rev(sort(study_hours))[1:99], cex=rep(1.5, 27), col=rep(COL[1,3], 99), pch=rep(20, 99))#
points(rep(0.4, 99), sort(study_hours)[1:99], cex=rep(1, 27), col=rep(COL[2], 99), pch=rep(1, 99))#
#
dev.off()
d = read.csv("~/Desktop/OI Slides/Chp 1/1-7_categorical_data/figures/pie_chart/msw3-all.csv")
names(d)
pie(d$Order)
?pie
pie(table(d$Order))
dim(table(d$Order))
COL
dim(COL)
7*4
?pie
pie(table(d$Order), labels="")
pie(table(d$Order), labels="", col = c(COL,black))
pie(table(d$Order), labels="", col = c(COL,"black"))
colors = as.vector(COL)
colors
pie(table(d$Order), labels="", col = c(colors,"black"))
pie(sort(table(d$Order)), labels="", col = c(colors,"black"))
pie(sort(table(d$Order)), labels="", col = c(colors,COL[1]))
?pie
pie(sort(table(d$Order)), labels="", col = c(colors,COL[1]), lwd = 0.5)
pie(sort(table(d$Order)), labels="", col = c(colors,COL[1]), lwd = 0.05)
pie(sort(table(d$Order)), labels="", col = c(colors,COL[1]), lty=2)
pie(sort(table(d$Order)), labels="", col = c(colors,COL[1]), lty=1)
colors = rev(as.vector(COL))
pie(sort(table(d$Order)), labels="", col = c(colors,COL[1]))
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))
legend("right", names(sort(table(d$Order)), col = c(colors,"white"))
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend("right", names(sort(table(d$Order))), col = c(colors,"white"))
myPDF('mammal_pie_chart.pdf', 9, 4, mar=c(3,3,0.5,0.5), cex.lab = 1.5, cex.axis = 1.25)#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend("right", names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
setwd("~/Desktop/OI Slides/Chp 1/1-7_categorical_data/figures/mammal_pie_chart")
myPDF('mammal_pie_chart.pdf', 9, 4, mar=c(3,3,0.5,0.5), cex.lab = 1.5, cex.axis = 1.25)#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend("right", names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(3,3,0.5,0.5), cex.lab = 1.5, cex.axis = 1.25)#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend("right", names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,0))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend("right", names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,5,0))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend("right", names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,5))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend("right", names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,10))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend("right", names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend("right", names(sort(table(d$Order))), col = c(colors,"white"))
locator(1)
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,10))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,20))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,20))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
legend(x = 1.5, y = 0.5, names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,0))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"), xlim = c(0,2))#
#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,0))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"), xlim = c(0,4))#
#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,0))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"), xlim = c(0,4))#
#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 9, 9, mar=c(0,0,0,0))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"), xlim = c(0,6))#
#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
a = pie(sort(table(d$Order)), labels="", col = c(colors,"white"), xlim = c(0,6))
a
pie(sort(table(d$Order)), labels="", col = c(colors,"white"), xlim = c(0,6))#
#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))
locator(1)
?pie
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))
?plot.new
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))
myPDF('mammal_pie_chart.pdf', 6, 9, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend(x = 1, y = 1, names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 6, 9, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(sort(table(d$Order))), col = c(colors,"white"))#
#
dev.off()
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(sort(table(d$Order))), col = c(colors,"white"), pch = 20)
myPDF('mammal_pie_chart.pdf', 6, 9, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(sort(table(d$Order))), col = c(colors,"white"), pch = 20)#
#
dev.off()
?pch
myPDF('mammal_pie_chart.pdf', 6, 9, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(sort(table(d$Order))), col = c(colors,"white"), pch = 15, cex = 1.5)#
#
dev.off()
?legend
myPDF('mammal_pie_chart.pdf', 6, 9, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(sort(table(d$Order))), col = c(colors,"white"), fill = TRUE)#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 6, 9, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(sort(table(d$Order))), fill = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 6, 9, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(rev(sort(table(d$Order)))), fill = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 6, 9, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 4, 7, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 5, 8, mar=c(0,0,0,0), mfrow = c(1,2))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
plot.new()#
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))#
#
dev.off()
myPDF('mammal_pie_chart.pdf', 5, 5, mar=c(0,0,0,0))#
#
pie(sort(table(d$Order)), labels="", col = c(colors,"white"))#
#
dev.off()
myPDF('mammal_pie_chart_legend.pdf', 9, 9, mar=c(0,0,0,0))#
#
plot.new()#
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))#
#
dev.off()
myPDF('mammal_pie_chart_legend.pdf', 6, 6, mar=c(0,0,0,0))#
#
plot.new()#
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))#
#
dev.off()
myPDF('mammal_pie_chart_legend.pdf', 6.5, 6.5, mar=c(0,0,0,0))#
#
plot.new()#
legend("center", names(rev(sort(table(d$Order)))), fill = rev(c(colors,"white")))#
#
dev.off()
q()
