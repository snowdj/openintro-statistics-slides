1300*1.3*6/10
(1300+35)*1.3*6/14
35*1.3
3446+265
3446+526
q()
sqrt(.8*.92/125)
12/125
438 * 0.716
438 * (1 - 0.716)
389 * 0.716
389 * (1 - 0.716)
 11,545 * 0.082
 11545 * 0.082
11545 *(1 - 0.082)
4691 * 0.082
4691 * (1 - 0.082)
q()
21+22.5+17+13+16+6
21+21+15+10+16+6
21+22+14.5+11+16+6
21+26+17+11+16+6
21+21.5+17+9.5+12+4
21+25.5+15+6+16+5
21+21+14+13+12+5
21+26+15+9.5+16+7
17+10.5+25+21+6+14
15+12+24+21+6+16
17+11.5+26+21+6+16
15+12+21+21+7+14
17+8+19+21+5+10
4+3
26-7
17+8+21+21+5+10
16.5+9+23+21+5+12
17+13+25+21+6+16
15+12+24+21+6+16
12+7+22+21+5+14
14+12+17+19+5+12
14+6+11+1+6+8
15+9+22+13+3+10
3300/760
5100/760
3300/(5100/760)
log(372,2)
?sp.plot
library(sp)
?sp.plot
??sp.plot
? spplot
9+15+16+13+9+9+5
9+19+18+23+8+10+5
10+15+5+17+10+9+2-10
10+15+5+17+10+9+2
9+11+16+12+1+10+4
?plot
8+19+17+16+10+10+5
10+20+20+21+10+10+5
10+19+19+21+10+10+5
10+16+20+22+8+8+4
q()
(323.58-246.43)/sqrt(64.43^2/12+54.13^2/14)
10+16+18+24+9+10+5
9+15+16+19+8+10+5
10+16+16+15+8+10+3
10+16+20+18+8+10+5
10+17+20+24+9+10+5
10+20+20+17+9+10+5
10+20+20+22+7+10+5
62.6-45.4
10+13+20+17+10+10+5
1+4
5+4+10+15+3
100-37
5+4+10+5
100-24
10+18+17+23+10+10+5
10+20+16+24+10+10+5
10+15+5+19+10+9+3
-10
9+11+17+14+3+10+4
9+16+11+13+8+7+3
10+17+16+14+9+9+5
a = read.csv("/Users/mine/Downloads/HW graded - Sta 101S12 - Sheet1.csv")
names(a)
anova(Project.1.Score~Who.Graded)
a = a[Project.1.Score != "W"]
a = a[a!Project.1.Score != "W"]
a = a[a$Project.1.Score != "W"]
a = a[a$Project.1.Score != "W",]
anova(Project.1.Score~Who.Graded, data = a)
?anova
anova(lm(Project.1.Score~Who.Graded, data = a))
class(Project.1.Score)
class(a$Project.1.Score)
anova(lm(as.numeric(Project.1.Score)~Who.Graded, data = a))
anova(as.numeric(Project.1.Score)~Who.Graded, data = a)
aov(as.numeric(Project.1.Score)~Who.Graded, data = a)
summary(aov(as.numeric(Project.1.Score)~Who.Graded, data = a))
boxplot(as.numeric(Project.1.Score)~Who.Graded)
boxplot(as.numeric(a$Project.1.Score)~a$Who.Graded)
as.numeric(a$Project.1.Score)
a = read.csv(/Users/mine/Desktop/HW graded - Sta 101S12 - Sheet1.csv"")
a = read.csv("/Users/mine/Desktop/HW graded - Sta 101S12 - Sheet1.csv")
boxplot(as.numeric(a$Project.1.Score)~a$Who.Graded)
summary(aov(as.numeric(Project.1.Score)~Who.Graded, data = a))
sort(a$Project.1.Score)
10+19+17+15+6+8+5
10+16+14+21+10+10+5
10+19+17+19+10+10+5
10+15+17+19+10+10+5
a = read.csv("/Users/mine/Desktop/HW graded - Sta 101S12 - Sheet1 (1).csv")
summary(aov(as.numeric(Project.1.Score)~Who.Graded, data = a))
boxplot(as.numeric(a$Project.1.Score)~a$Who.Graded)
mean(as.numeric(a$Project.1.Score))
sumary(as.numeric(a$Project.1.Score))
summary(as.numeric(a$Project.1.Score))
q()
x=read.csv("/Users/mine/Desktop/Projects/DataFest/Kiva data/lenders/lenders.csv")
library(RJSONIO)
head(x)
length(x$lender_id)
length(unique(x$lender_id))
t=table(x$lender_id)
t[t>1]
t
which(t!=1)
length(t)
which(is.na(x$lender_id))
x[26692,]
x[which(is.na(x$lender_id)),]
l1=list(1,2,3)
l2=list(4,5,6)
append(l1,l2)
11100/5*7
11100/6*7
q()
3937.60/1.77
3584.80/1.77
2225/5
445/2
105.53-2.01*32.04
105.53+2.01*32.04
105.03-2.01*32.04
105.03+2.01*32.04
exp(0.14)
2000/35*45
2000/35*50
q()
library(lme4)
install.packages(lme4)
install.packages("lme4")
?lme4
library(lme4)
?lme4
?lme
?glmer
10000/5
1865*5
1865*6
17000/7
2428-1865
563/14
1865*7+30*14
1865*7+35*14
1865*7
17000-13055
35*14
10000/5
10000/6
1865*7
10000/5*7
1865*7
? readMat
?? readMat
	install.packages("R.matlab")#
	library(R.matlab)
q()
1850*7
1850*6
1850*5
30*14
q()
1250*6
416/24
10000/5.5
1818.182/14
30*13*5
1+1.5+1.5+1.5+.5+3.5+1+1+1.5+1.5
goog = read.csv("http://stat.duke.edu/courses/Fall11/sta101.02/labs/goog.csv")
goog
library(mlbench)
install.packages("mlbench")
library(mlbench)
data(BostonHousing)
dim(BostonHousing)
??sleep
library(openintro)
data(mammals)
mammals
50000/8
500*8
150000/12
q()
sqrt(0.0336)
setwd("/Users/mine/Desktop/Teaching/Sta 101 - S12/Lectures/data")
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv")
setwd("/Users/mine/Desktop/Teaching/Sta 101 - S12/Lectures/Lecture 21/8-2modelSelection/figures/beauty")
# Rename the two variables for convenience#
d$beauty <- d$btystdave#
#
# New tenure variable#
d$tenure = NA#
d$tenure[d$tenured == 1] = "tenured"#
d$tenure[d$tenuretrack == 1 & d$tenured == 0] = "tenure track"#
d$tenure[d$tenuretrack == 0] = "non tenure track"#
d$tenure = as.factor(d$tenure)#
#
# New gender variable#
d$gender = "male"#
d$gender[d$female == 1] = "female"#
d$gender = as.factor(d$gender)#
#
# adjust other variables#
#
d$formal[d$formal == 0] = "no"#
d$formal[d$formal == 1] = "yes"#
d$formal = as.factor(d$formal)#
#
d$minority[d$minority == 0] = "no"#
d$minority[d$minority == 1] = "yes"#
d$minority = as.factor(d$minority)#
#
d$native[d$nonenglish == 1] = "non english"#
d$native[d$nonenglish == 0] = "english"#
d$native = as.factor(d$native)#
#
d$formal[d$formal == 1] = "yes"#
d$formal[d$formal == 0] = "no"#
d$formal = as.factor(d$formal)
beauty_profeval = lm(profevaluation ~ beauty, data = d)
xtable(summary(beauty_profeval), digits = 2)
library(xtable)
xtable(summary(beauty_profeval), digits = 2)
#
beauty_profeval_gender = lm(profevaluation ~ beauty + gender, data = d)#
xtable(summary(beauty_profeval_gender), digits = 2)
m = lm(profevaluation ~ beauty + gender + age + formal + lower + native + minority + students + tenure, data = d)
xtable(summary(m), digits = c(0,4,4,2,2))
d$lower[d$lower == 1] = "yes"#
d$lower[d$lower == 0] = "no"#
d$lower = as.factor(d$lower)
m = lm(profevaluation ~ beauty + gender + age + formal + lower + native + minority + students + tenure, data = d)#
#
xtable(summary(m), digits = c(0,4,4,2,2))
step(m)
m1 = lm(profevaluation ~ beauty + gender + age + formal + lower + native + students + tenure, data = d)
summary(m1)
m2 = lm(profevaluation ~ beauty + gender + age + formal + native + students + tenure, data = d)
summary(m2)
m3 = lm(profevaluation ~ beauty + gender + age + formal + native + tenure, data = d)
summary(m3)
m4 = lm(profevaluation ~ beauty + gender + age + native + tenure, data = d)
summary(m4)
m5 = lm(profevaluation ~ beauty + gender + age + tenure, data = d)
summary(m5)
m_final = lm(profevaluation ~ beauty + gender + age + formal + native + tenure, data = d)
m_log = lm(log(profevaluation) ~ beauty + gender + age + formal + native + tenure, data = d)
summary(m_log)
names(d)
?subset
d_to_post = subset(d, select = c("profnumber","minority","age","formal","lower","beauty","tenure","gender","native"))
dim(d_to_post)
names(d_to_post)
d_to_post = subset(d, select = c("profnumber","profevaluation","beauty","gender","age","formal","lower","native","minority","students","tenure"))
names(d_to_post)
write.csv(d_to_post, file = "ratemyprofs.csv")
setwd("/Users/mine/Desktop/Teaching/Sta 101 - S12/Lectures/Lecture 21/8-2modelSelection/figures/beauty")#
library(openintro)#
#
d = read.csv(file = "ratemyrpfos.csv")
d = read.csv("ratemyprofs.csv")
m_final = lm(profevaluation ~ beauty + gender + age + formal + native + tenure, data = d)
m_log = lm(log(profevaluation) ~ beauty + gender + age + formal + native + tenure, data = d)
qqnorm(log $residuals, main = "Normal probability plot of residuals", pch = 19, col = COL[2])#
qqline(log $residuals, col = COL[1], lwd = 2)
qqnorm(m_log $residuals, main = "Normal probability plot of residuals", pch = 19, col = COL[2])#
qqline(m_log $residuals, col = COL[1], lwd = 2)
COL <- c('#550000','#22558866')
qqnorm(m_log $residuals, main = "Normal probability plot of residuals", pch = 19, col = COL[2])#
qqline(m_log $residuals, col = COL[1], lwd = 2)
hist(m_log$residuals, main = "Histogram of residuals", col = COL[2], border = COL[2])
msq = lm(sqrt(profevaluation) ~ beauty + gender + age + formal + native + tenure, data = d)
hist(msq $residuals, main = "Histogram of residuals", col = COL[2], border = COL[2])
