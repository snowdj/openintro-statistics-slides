pdf("status_age.pdf", height = 4.3, width = 10)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25, mfrow = c(1,2))
boxplot(donner$Age ~ donner$Status)
dev.off()
pdf("status_age.pdf", height = 4.3, width = 10)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
boxplot(donner$Age ~ donner$Status)
dev.off()
pdf("status_age.pdf", height = 4, width = 8)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
boxplot(donner$Age ~ donner$Status)
dev.off()
g=glm(Status~Age+Sex, data=donner, family=binomial)
plot(Donner$age,as.numeric(Donner$survived)-1+0.01*((as.numeric(Donner$sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(1,17)[Donner$sex])
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(1,17)[donner$Sex])
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)))
lines(x,exp(p_female)/(1+exp(p_female)))
legend("topright",c("Male","Female"),pch=c(1,17))
text(20,0.4,"Males")
text(40,0.7,"Females")
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(1,17)[donner$Sex])
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
library(openintro)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]))
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
pdf("donner_scatter.pdf", height = 4, width = 8)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
dev.off()
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)))
lines(x,exp(p_female)/(1+exp(p_female)))
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
lines(x,exp(p_male)/(1+exp(p_male)), col = COL[1])
lines(x,exp(p_female)/(1+exp(p_female)), col = COL[2])
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)), col = COL[1], lwd = 2)
lines(x,exp(p_female)/(1+exp(p_female)), col = COL[2], lwd = 2, lty = 2)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
pdf("donner_scatter_pred.pdf", height = 4, width = 8)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)), col = COL[1], lwd = 2)
lines(x,exp(p_female)/(1+exp(p_female)), col = COL[2], lwd = 2, lty = 2)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
dev.off()
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
p_male = predict(g,newdata=data.frame(Age=x,Sex=Sex))
g1=glm(Status~Age, data=donner, family=binomial)
x=0:80
x=0:80
p = predict(g1,newdata=data.frame(Age=x))
lines(x,exp(p)/(1+exp(p)), col = COL[4], lwd = 2)
summary(g1)
x
points(x = c(0,25,50), y = exp(c(1,26,51))/(1+exp(c(1,26,51)), col = COL[4], pch = 19)
x=0:80
p = predict(g1,newdata=data.frame(Age=x))
lines(x,exp(p)/(1+exp(p)), col = COL[4], lwd = 2)
points(x = c(0,25,50), y = exp(c(p[1],p[26],p[51]))/(1+exp(c(p[1],p[26],p[51])), col = COL[4], pch = 19)
x=0:80
p = predict(g1,newdata=data.frame(Age=x))
lines(x,exp(p)/(1+exp(p)), col = COL[4], lwd = 2)
p1 = exp(p[1])/(1 + exp(p[1]))
p2 = exp(p[26])/(1 + exp(p[26]))
p3 = exp(p[51])/(1 + exp(p[51]))
points(x = c(0,25,50), y = c(p1,p2,p3), col = COL[4], pch = 19)
pdf("donner_scatter_pred.pdf", height = 4, width = 8)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
x=0:80
p = predict(g1,newdata=data.frame(Age=x))
lines(x,exp(p)/(1+exp(p)), col = COL[4], lwd = 2)
p1 = exp(p[1])/(1 + exp(p[1]))
p2 = exp(p[26])/(1 + exp(p[26]))
p3 = exp(p[51])/(1 + exp(p[51]))
points(x = c(0,25,50), y = c(p1,p2,p3), col = COL[4], pch = 19)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
dev.off()
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)), col = COL[1], lwd = 2)
lines(x,exp(p_female)/(1+exp(p_female)), col = COL[2], lwd = 2, lty = 2)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
text(x = 40, y = 0.7, "Female", col = COL[2])
text(x = 15, y = 0.3, "Male", col = COL[1])
text(x = 40, y = 0.7, "Female", col = COL[2], cex = 2)
text(x = 15, y = 0.3, "Male", col = COL[1], cex = 2)
text(x = 45, y = 0.7, "Female", col = COL[2], cex = 2)
text(x = 15, y = 0.3, "Male", col = COL[1], cex = 2)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)), col = COL[1], lwd = 2)
lines(x,exp(p_female)/(1+exp(p_female)), col = COL[2], lwd = 2, lty = 2)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
text(x = 45, y = 0.7, "Female", col = COL[2], cex = 1.5)
text(x = 20, y = 0.3, "Male", col = COL[1], cex = 1.5)
pdf("donner_scatter_both.pdf", height = 4, width = 8)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(donner$Age,as.numeric(donner$Status)-1+0.01*((as.numeric(donner$Sex)-1)*2-1),xlab="Age",ylab="Status",xlim=c(0,80),pch=c(15,17)[donner$Sex], col = c(COL[1,2], COL[2,2]))
x=0:80
p_male = predict(g,newdata=data.frame(Age=x,Sex="Male"))
p_female = predict(g,newdata=data.frame(Age=x,Sex="Female"))
lines(x,exp(p_male)/(1+exp(p_male)), col = COL[1], lwd = 2)
lines(x,exp(p_female)/(1+exp(p_female)), col = COL[2], lwd = 2, lty = 2)
legend("topright",c("Male","Female"),pch=c(15,17), col = c(COL[1,2], COL[2,2]), inset = 0.025)
text(x = 45, y = 0.7, "Female", col = COL[2], cex = 1.5)
text(x = 20, y = 0.3, "Male", col = COL[1], cex = 1.5)
dev.off()
data()
library(openintro)
data(COL)
library(Sleuth3)
birds = case2002
View(birds)
?case2002
plot(YR~AG, data = birds)
plot(YR~AG, data = birds, pch = birds$PCH)
birds$pch = NA
birds$pch[birds$LC == "LungCancer" & birds$BK == "Bird"] = 17
birds$pch[birds$LC == "LungCancer" & birds$BK == "NoBird"] = 16
birds$pch[birds$LC == "NoCancer" & birds$BK == "Bird"] = 2
birds$pch[birds$LC == "NoCancer" & birds$BK == "NoBird"] = 1
plot(YR~AG, data = birds, pch = birds$PCH)
plot(YR~AG, data = birds, pch = birds$pch)
birds$col[birds$LC == "LungCancer"] = COL[2,2]
birds$col[birds$LC == "NoCancer"] = COL[1,2]
plot(YR~AG, data = birds, pch = birds$pch, col = birds$col)
plot(YR~AG, data = birds, pch = birds$pch, col = birds$col, lwd = 2)
pdf("birds.pdf", height = 4, width = 8)
par(mar=c(2,4,2,1), las=1, mgp=c(3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)
plot(YR~AG, data = birds, pch = birds$pch, col = birds$col, lwd = 2)
dev.off()
p = (1:99)/100
f = function(p) (3.91 * p/(1-p))/(1+3.91 * p/(1-p))
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l")
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l")
abline(a=0,b=1,col='lightgrey')
points(0.05,f(0.05),col='red',pch=16)
lines(c(0.05,0.05),c(0,f(0.05)),col='red')
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l")
abline(a=0,b=1,col='lightgrey')
points(0.05,f(0.05),col='red',pch=16)
lines(c(0.05,0.05),c(0,f(0.05)),col='red')
lines(c(-1,0.05),c(f(0.05),f(0.05)),col='red')
# odds ratios
p = (1:99)/100
f = function(p) (3.91 * p/(1-p))/(1+3.91 * p/(1-p))
pdf("OR1.pdf",width=4,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l")
abline(a=0,b=1,col='lightgrey')
dev.off()
pdf("OR2.pdf",width=4,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l")
abline(a=0,b=1,col='lightgrey')
points(0.05,f(0.05),col='red',pch=16)
lines(c(0.05,0.05),c(0,f(0.05)),col='red')
dev.off()
pdf("OR3.pdf",width=4,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(p,f(p),xlab="P(lung cancer | no birds)",ylab="P(lung cancer | birds)",type="l")
abline(a=0,b=1,col='lightgrey')
points(0.05,f(0.05),col='red',pch=16)
lines(c(0.05,0.05),c(0,f(0.05)),col='red')
lines(c(-1,0.05),c(f(0.05),f(0.05)),col='red')
dev.off()
setwd("~/Desktop/Open Intro/OI Slides/Chp 8/8-4_logistic_reg/figures/birds")
setwd("~/Desktop/Open Intro/OI Slides/Chp 8/8-4_logistic_reg/figures/spam")
library(openintro)
data(email)
email$cc       = as.factor(ifelse(email$cc > 0, "yes", "no"))
email$attach   = as.factor(ifelse(email$attach > 0, "yes", "no"))
email$dollar   = as.factor(ifelse(email$dollar > 0, "yes", "no"))
email$inherit  = as.factor(ifelse(email$inherit > 0, "yes", "no"))
email$password = as.factor(ifelse(email$password > 0, "yes", "no"))
email$format       = as.factor(ifelse(email$format, "HTML", "Plain"))
email$sent_email   = as.factor(ifelse(email$sent_email, "yes", "no"))
email$image        = as.factor(ifelse(email$image, "yes", "no"))
email$from         = as.factor(ifelse(email$from, "yes", "no"))
email$to_multiple  = as.factor(ifelse(email$to_multiple, "yes", "no"))
email$re_subj      = as.factor(ifelse(email$re_subj, "yes", "no"))
email$exclaim_subj = as.factor(ifelse(email$exclaim_subj, "yes", "no"))
email$urgent_subj  = as.factor(ifelse(email$urgent_subj, "yes", "no"))
email$time = NULL
email$viagra = NULL
g_full = glm(spam ~ ., data=email, family=binomial)
summary(g_full)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=adjustcolor("blue", 0.2), pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,2], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
pdf("spam1.pdf",height=4)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
dev.off()
pdf("spam2.pdf",height=4)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=0.75,col='red',lwd=2)
dev.off()
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=0.75,col=COL[4],lwd=2)
text(0.9,1.4,"Spam")
text(0.3,1.4,"Not Spam")
pdf("spam3.pdf",height=4)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=0.75,col=COL[4],lwd=2)
text(0.9,1.4,"Spam")
text(0.3,1.4,"Not Spam")
dev.off()
pdf("spam4.pdf",height=4)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=0.75,col=COL[4],lwd=2)
abline(h=0.5,col=COL[4],lwd=2)
text(0.9,1.4,"Spam")
text(0.3,1.4,"Not Spam")
dev.off()
pdf("spam5.pdf",height=4)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=0.75,col=COL[4],lwd=2)
abline(h=0.5,col=COL[4],lwd=2)
text(0.3,1.4,"Not Spam")
text(0.9,1.4,"Spam")
t = table(email$spam, g_full$fitted.values>0.75)
text(0.3,0.625,paste0("False Neg (n=",t[2,1],")"))
text(0.9,0.625,paste0("True Pos (n=",t[2,2],")"))
text(0.3,-0.45,paste0("True Neg (n=",t[1,1],")"))
text(0.9,-0.45,paste0("False Pos (n=",t[1,2],")"))
dev.off()
for(i in 1:5)
{
thres = c(0.75, 0.625, 0.5, 0.375, 0.25)[i]
pdf(paste0("spam5-",i,".pdf"),height=4)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=thres,col=COL[4],lwd=2)
abline(h=0.5,col=COL[4],lwd=2)
x1 = (thres-0.05)/2
x2 = thres+0.05+(1-(thres+0.05))/2
text(x1,1.4,"Not Spam")
text(x2,1.4,"Spam")
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
text(x1,0.625,paste0("False Neg (n=",FN,")"))
text(x2,0.625,paste0("True Pos (n=",TP,")"))
text(x1,-0.45,paste0("True Neg (n=",TN,")"))
text(x2,-0.45,paste0("False Pos (n=",FP,")"))
dev.off()
cat("sen =",TP / (TP + FN),"\tspec = ",TN / (FP + TN),"\n")
}
Sensitivity = c(0.07356948, 0.106267, 0.1362398, 0.3051771, 0.5095368)
Specificity = c(0.9974676, 0.995498, 0.9952167, 0.9634215, 0.93640970)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(Sensitivity ~ Specificity,xlim=c(0,1),ylim=c(0,1),pch=16)
pdf("sen_vs_spec1.pdf",width=4,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(Sensitivity ~ Specificity,xlim=c(0,1),ylim=c(0,1),pch=16, COL[1])
dev.off()
Sensitivity2 = c()
Specificity2 = c()
for(thres in seq(0,1,0.025))
{
if (thres %in% c(0,0.75, 0.625, 0.5, 0.375, 0.25,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
Sensitivity2 = c(Sensitivity2, TP / (TP + FN))
Specificity2 = c(Specificity2, TN / (FP + TN))
}
plot(Sensitivity ~ Specificity,xlim=c(0,1),ylim=c(0,1),pch=16)
points(Specificity2, Sensitivity2,col=COL[4],pch=16,cex=0.5)
plot(Sensitivity ~ Specificity,xlim=c(0,1),ylim=c(0,1),pch=16,col=COL[1])
points(Specificity2, Sensitivity2,col=COL[4],pch=16,cex=0.5)
pdf("sen_vs_spec2.pdf",width=4,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(Sensitivity ~ Specificity,xlim=c(0,1),ylim=c(0,1),pch=16,col=COL[1])
points(Specificity2, Sensitivity2,col=COL[4],pch=16,cex=0.5)
dev.off()
pdf("sen_vs_spec3.pdf",width=4,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(1-Specificity,Sensitivity,xlim=c(0,1),ylim=c(0,1),pch=16,col=COL[1])
points(1-Specificity2, Sensitivity2,col=COL[4],pch=16,cex=0.5)
dev.off()
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction( g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf)
abline(a=0,b=1,col="lightgrey")
g_full
install.packages("ROCR")
library(ROCR)
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf)
abline(a=0,b=1,col="lightgrey")
pdf("ROC.pdf",width=4,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
pred = prediction(g_full$fitted.values, email$spam)
perf = performance(pred,"tpr","fpr")
plot(perf)
abline(a=0,b=1,col="lightgrey")
dev.off()
g_refined = glm(spam ~ to_multiple+cc+image+attach+winner+password+line_breaks+format+re_subj+urgent_subj+exclaim_mess, data=email, family=binomial)
summary(g_refined)
pred_full = prediction( g_full$fitted.values, email$spam)
pred_refined = prediction( g_refined$fitted.values, email$spam)
aucs = round(c(performance(pred_full,"auc")@y.values[[1]], performance(pred_refined,"auc")@y.values[[1]]),3)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(performance(pred_full,"tpr","fpr"))
plot(performance(pred_refined,"tpr","fpr"),add=TRUE, col="blue")
legend("bottomright",paste0(c("Full","Refined"), " (AUC: ",aucs,")"),col=c("black","blue"), lty=1)
abline(a=0,b=1,col="lightgrey")
par(mar=c(5, 4, 2, 2) + 0.1)
plot(performance(pred_full,"tpr","fpr"))
plot(performance(pred_refined,"tpr","fpr"),add=TRUE, col=COL[1])
legend("bottomright",paste0(c("Full","Refined"), " (AUC: ",aucs,")"),col=c("black",COL[1]), lty=1)
abline(a=0,b=1,col="lightgrey")
par(mar=c(5, 4, 2, 2) + 0.1)
plot(performance(pred_full,"tpr","fpr"), lwd = 2)
plot(performance(pred_refined,"tpr","fpr"),add=TRUE, col=COL[1], lwd = 2)
legend("bottomright",paste0(c("Full","Refined"), " (AUC: ",aucs,")"),col=c("black",COL[1]), lwd = 2, lty=1)
abline(a=0,b=1,col="lightgrey")
pdf("ROC_comp.pdf",width=6,height=6)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(performance(pred_full,"tpr","fpr"), lwd = 2)
plot(performance(pred_refined,"tpr","fpr"),add=TRUE, col=COL[1], lwd = 2)
legend("bottomright",paste0(c("Full","Refined"), " (AUC: ",aucs,")"),col=c("black",COL[1]), lwd = 2, lty=1)
abline(a=0,b=1,col="lightgrey")
dev.off()
U = c()
p = c()
for(thres in seq(0,1,0.01))
{
if (thres %in% c(0,1))
next
t = table(email$spam, g_full$fitted.values>thres)
FN = t[2,1]
FP = t[1,2]
TP = t[2,2]
TN = t[1,1]
U = c(U, TP + TN - 50 * FP - 5 * FN)
p = c(p,thres)
}
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l')
points(0.75,1422,col="red",lwd=2)
pdf("utility.pdf",width=6,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U ~ p,type='l')
points(0.75,1422,col=COL[4],lwd=2)
dev.off()
pdf("utility2.pdf",width=6,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U[p>0.6] ~ p[p>0.6],type='l')
points(0.75,1422,col=COL[4],lwd=2)
dev.off()
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U[p>0.6] ~ p[p>0.6],type='l')
points(0.75,1422,col=COL[4],lwd=2)
i=which.max(U)
points(p[i],U[i],col=COL[1],pch=16)
pdf("utility3.pdf",width=6,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(U[p>0.6] ~ p[p>0.6],type='l')
points(0.75,1422,col=COL[4],lwd=2)
i=which.max(U)
points(p[i],U[i],col=COL[1],pch=16)
dev.off()
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=p[i],col=COL[4],lwd=2)
pdf("utility4.pdf",height=4)
par(mar=c(5, 4, 0, 2) + 0.1)
set.seed(1)
jitter = rnorm(nrow(email), sd=0.08)
plot(g_full$fitted.values, email$spam+jitter,
xlim=0:1, ylim=c(-0.5,1.5), axes=FALSE,
xlab="Predicted probability", ylab="",
col=COL[1,3], pch=16)
axis(1)
axis(2, at=c(0,1), labels=c("0 (not spam)", "1 (spam)"))
abline(v=p[i],col=COL[4],lwd=2)
dev.off()
par(mar=c(5, 4, 2, 2) + 0.1)
plot(Sensitivity ~ Specificity,xlim=c(0,1),ylim=c(0,1),pch=16, COL[1])
Sensitivity = c(0.07356948, 0.106267, 0.1362398, 0.3051771, 0.5095368)
Specificity = c(0.9974676, 0.995498, 0.9952167, 0.9634215, 0.93640970)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(Sensitivity ~ Specificity,xlim=c(0,1),ylim=c(0,1),pch=16, COL[1])
par(mar=c(5, 4, 2, 2) + 0.1)
plot(Sensitivity ~ Specificity,xlim=c(0,1),ylim=c(0,1),pch=16, col = COL[1])
pdf("sen_vs_spec1.pdf",width=4,height=4)
par(mar=c(5, 4, 2, 2) + 0.1)
plot(Sensitivity ~ Specificity,xlim=c(0,1),ylim=c(0,1),pch=16, col = COL[1])
dev.off()
